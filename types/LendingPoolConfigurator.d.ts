/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction} from 'ethers';
import {Contract, ContractTransaction, Overrides, CallOverrides} from '@ethersproject/contracts';
import {BytesLike} from '@ethersproject/bytes';
import {Listener, Provider} from '@ethersproject/providers';
import {FunctionFragment, EventFragment, Result} from '@ethersproject/abi';

interface LendingPoolConfiguratorInterface extends ethers.utils.Interface {
  functions: {
    'CONFIGURATOR_REVISION()': FunctionFragment;
    'activateReserve(address)': FunctionFragment;
    'deactivateReserve(address)': FunctionFragment;
    'disableBorrowingOnReserve(address)': FunctionFragment;
    'disableReserveAsCollateral(address)': FunctionFragment;
    'disableReserveStableRate(address)': FunctionFragment;
    'enableBorrowingOnReserve(address,bool)': FunctionFragment;
    'enableReserveAsCollateral(address,uint256,uint256,uint256)': FunctionFragment;
    'enableReserveStableRate(address)': FunctionFragment;
    'freezeReserve(address)': FunctionFragment;
    'initReserve(address,address,address,address,uint8,address)': FunctionFragment;
    'initialize(address)': FunctionFragment;
    'pool()': FunctionFragment;
    'poolAddressesProvider()': FunctionFragment;
    'setLiquidationBonus(address,uint256)': FunctionFragment;
    'setLiquidationThreshold(address,uint256)': FunctionFragment;
    'setLtv(address,uint256)': FunctionFragment;
    'setReserveDecimals(address,uint256)': FunctionFragment;
    'setReserveInterestRateStrategyAddress(address,address)': FunctionFragment;
    'unfreezeReserve(address)': FunctionFragment;
    'updateAToken(address,address)': FunctionFragment;
    'updateStableDebtToken(address,address)': FunctionFragment;
    'updateVariableDebtToken(address,address)': FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'CONFIGURATOR_REVISION', values?: undefined): string;
  encodeFunctionData(functionFragment: 'activateReserve', values: [string]): string;
  encodeFunctionData(functionFragment: 'deactivateReserve', values: [string]): string;
  encodeFunctionData(functionFragment: 'disableBorrowingOnReserve', values: [string]): string;
  encodeFunctionData(functionFragment: 'disableReserveAsCollateral', values: [string]): string;
  encodeFunctionData(functionFragment: 'disableReserveStableRate', values: [string]): string;
  encodeFunctionData(
    functionFragment: 'enableBorrowingOnReserve',
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: 'enableReserveAsCollateral',
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: 'enableReserveStableRate', values: [string]): string;
  encodeFunctionData(functionFragment: 'freezeReserve', values: [string]): string;
  encodeFunctionData(
    functionFragment: 'initReserve',
    values: [string, string, string, string, BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: 'initialize', values: [string]): string;
  encodeFunctionData(functionFragment: 'pool', values?: undefined): string;
  encodeFunctionData(functionFragment: 'poolAddressesProvider', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'setLiquidationBonus',
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: 'setLiquidationThreshold',
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: 'setLtv', values: [string, BigNumberish]): string;
  encodeFunctionData(
    functionFragment: 'setReserveDecimals',
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: 'setReserveInterestRateStrategyAddress',
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: 'unfreezeReserve', values: [string]): string;
  encodeFunctionData(functionFragment: 'updateAToken', values: [string, string]): string;
  encodeFunctionData(functionFragment: 'updateStableDebtToken', values: [string, string]): string;
  encodeFunctionData(functionFragment: 'updateVariableDebtToken', values: [string, string]): string;

  decodeFunctionResult(functionFragment: 'CONFIGURATOR_REVISION', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'activateReserve', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'deactivateReserve', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'disableBorrowingOnReserve', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'disableReserveAsCollateral', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'disableReserveStableRate', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'enableBorrowingOnReserve', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'enableReserveAsCollateral', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'enableReserveStableRate', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'freezeReserve', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'initReserve', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'pool', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'poolAddressesProvider', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setLiquidationBonus', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setLiquidationThreshold', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setLtv', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setReserveDecimals', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'setReserveInterestRateStrategyAddress',
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: 'unfreezeReserve', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateAToken', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateStableDebtToken', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateVariableDebtToken', data: BytesLike): Result;

  events: {
    'ATokenUpgraded(address,address,address)': EventFragment;
    'BorrowingDisabledOnReserve(address)': EventFragment;
    'BorrowingEnabledOnReserve(address,bool)': EventFragment;
    'ReserveActivated(address)': EventFragment;
    'ReserveBaseLtvChanged(address,uint256)': EventFragment;
    'ReserveDeactivated(address)': EventFragment;
    'ReserveDecimalsChanged(address,uint256)': EventFragment;
    'ReserveDisabledAsCollateral(address)': EventFragment;
    'ReserveEnabledAsCollateral(address,uint256,uint256,uint256)': EventFragment;
    'ReserveFreezed(address)': EventFragment;
    'ReserveInitialized(address,address,address,address,address)': EventFragment;
    'ReserveInterestRateStrategyChanged(address,address)': EventFragment;
    'ReserveLiquidationBonusChanged(address,uint256)': EventFragment;
    'ReserveLiquidationThresholdChanged(address,uint256)': EventFragment;
    'ReserveUnfreezed(address)': EventFragment;
    'StableDebtTokenUpgraded(address,address,address)': EventFragment;
    'StableRateDisabledOnReserve(address)': EventFragment;
    'StableRateEnabledOnReserve(address)': EventFragment;
    'VariableDebtTokenUpgraded(address,address,address)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'ATokenUpgraded'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'BorrowingDisabledOnReserve'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'BorrowingEnabledOnReserve'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveActivated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveBaseLtvChanged'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveDeactivated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveDecimalsChanged'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveDisabledAsCollateral'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveEnabledAsCollateral'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveFreezed'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveInitialized'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveInterestRateStrategyChanged'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveLiquidationBonusChanged'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveLiquidationThresholdChanged'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ReserveUnfreezed'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'StableDebtTokenUpgraded'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'StableRateDisabledOnReserve'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'StableRateEnabledOnReserve'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'VariableDebtTokenUpgraded'): EventFragment;
}

export class LendingPoolConfigurator extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: LendingPoolConfiguratorInterface;

  functions: {
    CONFIGURATOR_REVISION(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    'CONFIGURATOR_REVISION()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    activateReserve(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

    'activateReserve(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    deactivateReserve(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

    'deactivateReserve(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    disableBorrowingOnReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'disableBorrowingOnReserve(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    disableReserveAsCollateral(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'disableReserveAsCollateral(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    disableReserveStableRate(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

    'disableReserveStableRate(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'enableBorrowingOnReserve(address,bool)'(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'enableReserveAsCollateral(address,uint256,uint256,uint256)'(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    enableReserveStableRate(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

    'enableReserveStableRate(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    freezeReserve(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

    'freezeReserve(address)'(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

    initReserve(
      _reserve: string,
      _aTokenImpl: string,
      _stableDebtTokenImpl: string,
      _variableDebtTokenImpl: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'initReserve(address,address,address,address,uint8,address)'(
      _reserve: string,
      _aTokenImpl: string,
      _stableDebtTokenImpl: string,
      _variableDebtTokenImpl: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    initialize(_poolAddressesProvider: string, overrides?: Overrides): Promise<ContractTransaction>;

    'initialize(address)'(
      _poolAddressesProvider: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    pool(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    'pool()'(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    poolAddressesProvider(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    'poolAddressesProvider()'(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    setLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'setLiquidationBonus(address,uint256)'(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'setLiquidationThreshold(address,uint256)'(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setLtv(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'setLtv(address,uint256)'(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'setReserveDecimals(address,uint256)'(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'setReserveInterestRateStrategyAddress(address,address)'(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    unfreezeReserve(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

    'unfreezeReserve(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateAToken(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'updateAToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateStableDebtToken(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'updateStableDebtToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateVariableDebtToken(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'updateVariableDebtToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  CONFIGURATOR_REVISION(overrides?: CallOverrides): Promise<BigNumber>;

  'CONFIGURATOR_REVISION()'(overrides?: CallOverrides): Promise<BigNumber>;

  activateReserve(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

  'activateReserve(address)'(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

  deactivateReserve(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

  'deactivateReserve(address)'(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  disableBorrowingOnReserve(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

  'disableBorrowingOnReserve(address)'(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  disableReserveAsCollateral(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

  'disableReserveAsCollateral(address)'(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  disableReserveStableRate(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

  'disableReserveStableRate(address)'(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  enableBorrowingOnReserve(
    _reserve: string,
    _stableBorrowRateEnabled: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  'enableBorrowingOnReserve(address,bool)'(
    _reserve: string,
    _stableBorrowRateEnabled: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  enableReserveAsCollateral(
    _reserve: string,
    _baseLTVasCollateral: BigNumberish,
    _liquidationThreshold: BigNumberish,
    _liquidationBonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  'enableReserveAsCollateral(address,uint256,uint256,uint256)'(
    _reserve: string,
    _baseLTVasCollateral: BigNumberish,
    _liquidationThreshold: BigNumberish,
    _liquidationBonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  enableReserveStableRate(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

  'enableReserveStableRate(address)'(
    _reserve: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  freezeReserve(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

  'freezeReserve(address)'(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

  initReserve(
    _reserve: string,
    _aTokenImpl: string,
    _stableDebtTokenImpl: string,
    _variableDebtTokenImpl: string,
    _underlyingAssetDecimals: BigNumberish,
    _interestRateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  'initReserve(address,address,address,address,uint8,address)'(
    _reserve: string,
    _aTokenImpl: string,
    _stableDebtTokenImpl: string,
    _variableDebtTokenImpl: string,
    _underlyingAssetDecimals: BigNumberish,
    _interestRateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  initialize(_poolAddressesProvider: string, overrides?: Overrides): Promise<ContractTransaction>;

  'initialize(address)'(
    _poolAddressesProvider: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  pool(overrides?: CallOverrides): Promise<string>;

  'pool()'(overrides?: CallOverrides): Promise<string>;

  poolAddressesProvider(overrides?: CallOverrides): Promise<string>;

  'poolAddressesProvider()'(overrides?: CallOverrides): Promise<string>;

  setLiquidationBonus(
    _reserve: string,
    _bonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  'setLiquidationBonus(address,uint256)'(
    _reserve: string,
    _bonus: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setLiquidationThreshold(
    _reserve: string,
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  'setLiquidationThreshold(address,uint256)'(
    _reserve: string,
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setLtv(_reserve: string, _ltv: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>;

  'setLtv(address,uint256)'(
    _reserve: string,
    _ltv: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserveDecimals(
    _reserve: string,
    _decimals: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  'setReserveDecimals(address,uint256)'(
    _reserve: string,
    _decimals: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReserveInterestRateStrategyAddress(
    _reserve: string,
    _rateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  'setReserveInterestRateStrategyAddress(address,address)'(
    _reserve: string,
    _rateStrategyAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  unfreezeReserve(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

  'unfreezeReserve(address)'(_reserve: string, overrides?: Overrides): Promise<ContractTransaction>;

  updateAToken(
    _reserve: string,
    _implementation: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  'updateAToken(address,address)'(
    _reserve: string,
    _implementation: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateStableDebtToken(
    _reserve: string,
    _implementation: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  'updateStableDebtToken(address,address)'(
    _reserve: string,
    _implementation: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateVariableDebtToken(
    _reserve: string,
    _implementation: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  'updateVariableDebtToken(address,address)'(
    _reserve: string,
    _implementation: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    CONFIGURATOR_REVISION(overrides?: CallOverrides): Promise<BigNumber>;

    'CONFIGURATOR_REVISION()'(overrides?: CallOverrides): Promise<BigNumber>;

    activateReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    'activateReserve(address)'(_reserve: string, overrides?: CallOverrides): Promise<void>;

    deactivateReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    'deactivateReserve(address)'(_reserve: string, overrides?: CallOverrides): Promise<void>;

    disableBorrowingOnReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    'disableBorrowingOnReserve(address)'(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    disableReserveAsCollateral(_reserve: string, overrides?: CallOverrides): Promise<void>;

    'disableReserveAsCollateral(address)'(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    disableReserveStableRate(_reserve: string, overrides?: CallOverrides): Promise<void>;

    'disableReserveStableRate(address)'(_reserve: string, overrides?: CallOverrides): Promise<void>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    'enableBorrowingOnReserve(address,bool)'(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    'enableReserveAsCollateral(address,uint256,uint256,uint256)'(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    enableReserveStableRate(_reserve: string, overrides?: CallOverrides): Promise<void>;

    'enableReserveStableRate(address)'(_reserve: string, overrides?: CallOverrides): Promise<void>;

    freezeReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    'freezeReserve(address)'(_reserve: string, overrides?: CallOverrides): Promise<void>;

    initReserve(
      _reserve: string,
      _aTokenImpl: string,
      _stableDebtTokenImpl: string,
      _variableDebtTokenImpl: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    'initReserve(address,address,address,address,uint8,address)'(
      _reserve: string,
      _aTokenImpl: string,
      _stableDebtTokenImpl: string,
      _variableDebtTokenImpl: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    initialize(_poolAddressesProvider: string, overrides?: CallOverrides): Promise<void>;

    'initialize(address)'(_poolAddressesProvider: string, overrides?: CallOverrides): Promise<void>;

    pool(overrides?: CallOverrides): Promise<string>;

    'pool()'(overrides?: CallOverrides): Promise<string>;

    poolAddressesProvider(overrides?: CallOverrides): Promise<string>;

    'poolAddressesProvider()'(overrides?: CallOverrides): Promise<string>;

    setLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    'setLiquidationBonus(address,uint256)'(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    'setLiquidationThreshold(address,uint256)'(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setLtv(_reserve: string, _ltv: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'setLtv(address,uint256)'(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    'setReserveDecimals(address,uint256)'(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    'setReserveInterestRateStrategyAddress(address,address)'(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    unfreezeReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    'unfreezeReserve(address)'(_reserve: string, overrides?: CallOverrides): Promise<void>;

    updateAToken(
      _reserve: string,
      _implementation: string,
      overrides?: CallOverrides
    ): Promise<void>;

    'updateAToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateStableDebtToken(
      _reserve: string,
      _implementation: string,
      overrides?: CallOverrides
    ): Promise<void>;

    'updateStableDebtToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateVariableDebtToken(
      _reserve: string,
      _implementation: string,
      overrides?: CallOverrides
    ): Promise<void>;

    'updateVariableDebtToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    ATokenUpgraded(_reserve: null, _proxy: null, _implementation: null): EventFilter;

    BorrowingDisabledOnReserve(_reserve: string | null): EventFilter;

    BorrowingEnabledOnReserve(_reserve: null, _stableRateEnabled: null): EventFilter;

    ReserveActivated(_reserve: string | null): EventFilter;

    ReserveBaseLtvChanged(_reserve: null, _ltv: null): EventFilter;

    ReserveDeactivated(_reserve: string | null): EventFilter;

    ReserveDecimalsChanged(_reserve: null, _decimals: null): EventFilter;

    ReserveDisabledAsCollateral(_reserve: string | null): EventFilter;

    ReserveEnabledAsCollateral(
      _reserve: string | null,
      _ltv: null,
      _liquidationThreshold: null,
      _liquidationBonus: null
    ): EventFilter;

    ReserveFreezed(_reserve: string | null): EventFilter;

    ReserveInitialized(
      _reserve: string | null,
      _aToken: string | null,
      _stableDebtToken: null,
      _variableDebtToken: null,
      _interestRateStrategyAddress: null
    ): EventFilter;

    ReserveInterestRateStrategyChanged(_reserve: null, _strategy: null): EventFilter;

    ReserveLiquidationBonusChanged(_reserve: null, _bonus: null): EventFilter;

    ReserveLiquidationThresholdChanged(_reserve: null, _threshold: null): EventFilter;

    ReserveUnfreezed(_reserve: string | null): EventFilter;

    StableDebtTokenUpgraded(_reserve: null, _proxy: null, _implementation: null): EventFilter;

    StableRateDisabledOnReserve(_reserve: string | null): EventFilter;

    StableRateEnabledOnReserve(_reserve: string | null): EventFilter;

    VariableDebtTokenUpgraded(_reserve: null, _proxy: null, _implementation: null): EventFilter;
  };

  estimateGas: {
    CONFIGURATOR_REVISION(overrides?: CallOverrides): Promise<BigNumber>;

    'CONFIGURATOR_REVISION()'(overrides?: CallOverrides): Promise<BigNumber>;

    activateReserve(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    'activateReserve(address)'(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    deactivateReserve(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    'deactivateReserve(address)'(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    disableBorrowingOnReserve(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    'disableBorrowingOnReserve(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    disableReserveAsCollateral(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    'disableReserveAsCollateral(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    disableReserveStableRate(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    'disableReserveStableRate(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    'enableBorrowingOnReserve(address,bool)'(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    'enableReserveAsCollateral(address,uint256,uint256,uint256)'(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    enableReserveStableRate(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    'enableReserveStableRate(address)'(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    freezeReserve(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    'freezeReserve(address)'(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    initReserve(
      _reserve: string,
      _aTokenImpl: string,
      _stableDebtTokenImpl: string,
      _variableDebtTokenImpl: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    'initReserve(address,address,address,address,uint8,address)'(
      _reserve: string,
      _aTokenImpl: string,
      _stableDebtTokenImpl: string,
      _variableDebtTokenImpl: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    initialize(_poolAddressesProvider: string, overrides?: Overrides): Promise<BigNumber>;

    'initialize(address)'(
      _poolAddressesProvider: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    pool(overrides?: CallOverrides): Promise<BigNumber>;

    'pool()'(overrides?: CallOverrides): Promise<BigNumber>;

    poolAddressesProvider(overrides?: CallOverrides): Promise<BigNumber>;

    'poolAddressesProvider()'(overrides?: CallOverrides): Promise<BigNumber>;

    setLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    'setLiquidationBonus(address,uint256)'(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    'setLiquidationThreshold(address,uint256)'(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setLtv(_reserve: string, _ltv: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    'setLtv(address,uint256)'(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    'setReserveDecimals(address,uint256)'(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    'setReserveInterestRateStrategyAddress(address,address)'(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    unfreezeReserve(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    'unfreezeReserve(address)'(_reserve: string, overrides?: Overrides): Promise<BigNumber>;

    updateAToken(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    'updateAToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateStableDebtToken(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    'updateStableDebtToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateVariableDebtToken(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    'updateVariableDebtToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    CONFIGURATOR_REVISION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'CONFIGURATOR_REVISION()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    activateReserve(_reserve: string, overrides?: Overrides): Promise<PopulatedTransaction>;

    'activateReserve(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    deactivateReserve(_reserve: string, overrides?: Overrides): Promise<PopulatedTransaction>;

    'deactivateReserve(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    disableBorrowingOnReserve(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'disableBorrowingOnReserve(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    disableReserveAsCollateral(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'disableReserveAsCollateral(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    disableReserveStableRate(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'disableReserveStableRate(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    enableBorrowingOnReserve(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'enableBorrowingOnReserve(address,bool)'(
      _reserve: string,
      _stableBorrowRateEnabled: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    enableReserveAsCollateral(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'enableReserveAsCollateral(address,uint256,uint256,uint256)'(
      _reserve: string,
      _baseLTVasCollateral: BigNumberish,
      _liquidationThreshold: BigNumberish,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    enableReserveStableRate(_reserve: string, overrides?: Overrides): Promise<PopulatedTransaction>;

    'enableReserveStableRate(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    freezeReserve(_reserve: string, overrides?: Overrides): Promise<PopulatedTransaction>;

    'freezeReserve(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initReserve(
      _reserve: string,
      _aTokenImpl: string,
      _stableDebtTokenImpl: string,
      _variableDebtTokenImpl: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'initReserve(address,address,address,address,uint8,address)'(
      _reserve: string,
      _aTokenImpl: string,
      _stableDebtTokenImpl: string,
      _variableDebtTokenImpl: string,
      _underlyingAssetDecimals: BigNumberish,
      _interestRateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _poolAddressesProvider: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'initialize(address)'(
      _poolAddressesProvider: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    pool(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'pool()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    poolAddressesProvider(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'poolAddressesProvider()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setLiquidationBonus(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'setLiquidationBonus(address,uint256)'(
      _reserve: string,
      _bonus: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setLiquidationThreshold(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'setLiquidationThreshold(address,uint256)'(
      _reserve: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setLtv(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'setLtv(address,uint256)'(
      _reserve: string,
      _ltv: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserveDecimals(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'setReserveDecimals(address,uint256)'(
      _reserve: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReserveInterestRateStrategyAddress(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'setReserveInterestRateStrategyAddress(address,address)'(
      _reserve: string,
      _rateStrategyAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    unfreezeReserve(_reserve: string, overrides?: Overrides): Promise<PopulatedTransaction>;

    'unfreezeReserve(address)'(
      _reserve: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateAToken(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'updateAToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateStableDebtToken(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'updateStableDebtToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateVariableDebtToken(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'updateVariableDebtToken(address,address)'(
      _reserve: string,
      _implementation: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
