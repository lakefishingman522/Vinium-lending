/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { WalletBalanceProvider } from "./WalletBalanceProvider";

export class WalletBalanceProviderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _provider: string,
    overrides?: TransactionOverrides
  ): Promise<WalletBalanceProvider> {
    return super.deploy(_provider, overrides) as Promise<WalletBalanceProvider>;
  }
  getDeployTransaction(
    _provider: string,
    overrides?: TransactionOverrides
  ): UnsignedTransaction {
    return super.getDeployTransaction(_provider, overrides);
  }
  attach(address: string): WalletBalanceProvider {
    return super.attach(address) as WalletBalanceProvider;
  }
  connect(signer: Signer): WalletBalanceProviderFactory {
    return super.connect(signer) as WalletBalanceProviderFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WalletBalanceProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WalletBalanceProvider;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract LendingPoolAddressesProvider",
        name: "_provider",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address"
      },
      {
        internalType: "address",
        name: "_token",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]"
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]"
      }
    ],
    name: "batchBalanceOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address"
      }
    ],
    name: "getUserWalletBalances",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]"
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c0d380380610c0d8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610b79806100946000396000f3fe6080604052600436106100385760003560e01c80639e3c930914610093578063b59b28ef14610181578063f7888aec1461032f5761008e565b3661008e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610b16602e913960400191505060405180910390fd5b600080fd5b34801561009f57600080fd5b506100e2600480360360208110156100b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103b4565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561012957808201518184015260208101905061010e565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561016b578082015181840152602081019050610150565b5050505090500194505050505060405180910390f35b34801561018d57600080fd5b506102d8600480360360408110156101a457600080fd5b81019080803590602001906401000000008111156101c157600080fd5b8201836020820111156101d357600080fd5b803590602001918460208302840111640100000000831117156101f557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561025557600080fd5b82018360208201111561026757600080fd5b8035906020019184602083028401116401000000008311171561028957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929050505061079a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561031b578082015181840152602081019050610300565b505050509050019250505060405180910390f35b34801561033b57600080fd5b5061039e6004803603604081101561035257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109be565b6040518082815260200191505060405180910390f35b60608060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ed6ff7606040518163ffffffff1660e01b815260040160206040518083038186803b15801561042057600080fd5b505afa158015610434573d6000803e3d6000fd5b505050506040513d602081101561044a57600080fd5b8101908080519060200190929190505050905060608173ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160006040518083038186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156104e357600080fd5b810190808051604051939291908464010000000082111561050357600080fd5b8382019150602082018581111561051957600080fd5b825186602082028301116401000000008211171561053657600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561056d578082015181840152602081019050610552565b5050505090500160405250505090506060815167ffffffffffffffff8111801561059657600080fd5b506040519080825280602002602001820160405280156105c55781602001602082028036833780820191505090505b50905060008090505b825181101561078b578373ffffffffffffffffffffffffffffffffffffffff166305075d6e8483815181106105ff57fe5b60200260200101516040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561066757600080fd5b505afa15801561067b573d6000803e3d6000fd5b505050506040513d602081101561069157600080fd5b81019080805190602001909291905050506106c55760008282815181106106b457fe5b60200260200101818152505061077e565b6106cd610aae565b73ffffffffffffffffffffffffffffffffffffffff168382815181106106ef57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161461074c5761072f8784838151811061072257fe5b60200260200101516109be565b82828151811061073b57fe5b60200260200101818152505061077d565b8673ffffffffffffffffffffffffffffffffffffffff163182828151811061077057fe5b6020026020010181815250505b5b80806001019150506105ce565b50818194509450505050915091565b606080825184510267ffffffffffffffff811180156107b857600080fd5b506040519080825280602002602001820160405280156107e75781602001602082028036833780820191505090505b50905060008090505b84518110156109b35760008090505b84518110156109a5576000855183029050610818610aae565b73ffffffffffffffffffffffffffffffffffffffff1686838151811061083a57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156108a85786838151811061086a57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1631848383018151811061089757fe5b602002602001018181525050610997565b6108da8683815181106108b757fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16610aca565b61094c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f494e56414c49445f544f4b454e0000000000000000000000000000000000000081525060200191505060405180910390fd5b61097c87848151811061095b57fe5b602002602001015187848151811061096f57fe5b60200260200101516109be565b848383018151811061098a57fe5b6020026020010181815250505b5080806001019150506107ff565b5080806001019150506107f0565b508091505092915050565b60006109df8273ffffffffffffffffffffffffffffffffffffffff16610aca565b15610aa3578173ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610a6157600080fd5b505afa158015610a75573d6000803e3d6000fd5b505050506040513d6020811015610a8b57600080fd5b81019080805190602001909291905050509050610aa8565b600090505b92915050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee905090565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015610b0c57506000801b8214155b9250505091905056fe57616c6c657442616c616e636550726f766964657220646f6573206e6f7420616363657074207061796d656e7473a26469706673582212200e4e04845aa833e41a66942d59968d638e07e12e8ede44593337d9b5fa8ee41f64736f6c63430006080033";
