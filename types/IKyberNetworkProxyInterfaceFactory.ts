/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Contract, Signer} from 'ethers';
import {Provider} from 'ethers/providers';

import {IKyberNetworkProxyInterface} from './IKyberNetworkProxyInterface';

export class IKyberNetworkProxyInterfaceFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKyberNetworkProxyInterface {
    return new Contract(address, _abi, signerOrProvider) as IKyberNetworkProxyInterface;
  }
}

const _abi = [
  {
    inputs: [],
    name: 'enabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'src',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'dest',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'srcQty',
        type: 'uint256',
      },
    ],
    name: 'getExpectedRate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'expectedRate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'slippageRate',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'getUserCapInTokenWei',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'getUserCapInWei',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
    ],
    name: 'info',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxGasPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'src',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'srcAmount',
        type: 'uint256',
      },
      {
        internalType: 'contract IERC20',
        name: 'dest',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'destAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'maxDestAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minConversionRate',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'walletId',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'hint',
        type: 'bytes',
      },
    ],
    name: 'tradeWithHint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
];
