/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface LendingPoolAddressesProviderInterface extends ethers.utils.Interface {
  functions: {
    "getAddress(bytes32)": FunctionFragment;
    "getFeeProvider()": FunctionFragment;
    "getLendingPool()": FunctionFragment;
    "getLendingPoolConfigurator()": FunctionFragment;
    "getLendingPoolLiquidationManager()": FunctionFragment;
    "getLendingPoolManager()": FunctionFragment;
    "getLendingRateOracle()": FunctionFragment;
    "getPriceOracle()": FunctionFragment;
    "getTokenDistributor()": FunctionFragment;
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setFeeProviderImpl(address)": FunctionFragment;
    "setLendingPoolConfiguratorImpl(address)": FunctionFragment;
    "setLendingPoolImpl(address)": FunctionFragment;
    "setLendingPoolLiquidationManager(address)": FunctionFragment;
    "setLendingPoolManager(address)": FunctionFragment;
    "setLendingRateOracle(address)": FunctionFragment;
    "setPriceOracle(address)": FunctionFragment;
    "setTokenDistributor(address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAddress",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getFeeProvider",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLendingPool",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLendingPoolConfigurator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLendingPoolLiquidationManager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLendingPoolManager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLendingRateOracle",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPriceOracle",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenDistributor",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setFeeProviderImpl",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setLendingPoolConfiguratorImpl",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setLendingPoolImpl",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setLendingPoolLiquidationManager",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setLendingPoolManager",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setLendingRateOracle",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setPriceOracle",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setTokenDistributor",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "getAddress", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getFeeProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLendingPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLendingPoolConfigurator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLendingPoolLiquidationManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLendingPoolManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLendingRateOracle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPriceOracle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenDistributor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFeeProviderImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setLendingPoolConfiguratorImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setLendingPoolImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setLendingPoolLiquidationManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setLendingPoolManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setLendingRateOracle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPriceOracle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTokenDistributor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "EthereumAddressUpdated(address)": EventFragment;
    "FeeProviderUpdated(address)": EventFragment;
    "LendingPoolConfiguratorUpdated(address)": EventFragment;
    "LendingPoolLiquidationManagerUpdated(address)": EventFragment;
    "LendingPoolManagerUpdated(address)": EventFragment;
    "LendingPoolUpdated(address)": EventFragment;
    "LendingRateOracleUpdated(address)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "PriceOracleUpdated(address)": EventFragment;
    "ProxyCreated(bytes32,address)": EventFragment;
    "TokenDistributorUpdated(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "EthereumAddressUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FeeProviderUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "LendingPoolConfiguratorUpdated"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "LendingPoolLiquidationManagerUpdated"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LendingPoolManagerUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LendingPoolUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LendingRateOracleUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PriceOracleUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProxyCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenDistributorUpdated"): EventFragment;
}

export class LendingPoolAddressesProvider extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: LendingPoolAddressesProviderInterface;

  functions: {
    getAddress(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getAddress(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getFeeProvider(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getFeeProvider()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getLendingPool(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getLendingPool()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getLendingPoolConfigurator(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getLendingPoolConfigurator()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getLendingPoolLiquidationManager(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getLendingPoolLiquidationManager()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getLendingPoolManager(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getLendingPoolManager()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getLendingRateOracle(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getLendingRateOracle()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getPriceOracle(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getPriceOracle()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getTokenDistributor(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getTokenDistributor()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    owner(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "owner()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    setFeeProviderImpl(
      _feeProvider: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setFeeProviderImpl(address)"(
      _feeProvider: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setLendingPoolConfiguratorImpl(
      _configurator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setLendingPoolConfiguratorImpl(address)"(
      _configurator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setLendingPoolImpl(
      _pool: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setLendingPoolImpl(address)"(
      _pool: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setLendingPoolLiquidationManager(
      _manager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setLendingPoolLiquidationManager(address)"(
      _manager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setLendingPoolManager(
      _lendingPoolManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setLendingPoolManager(address)"(
      _lendingPoolManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setLendingRateOracle(
      _lendingRateOracle: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setLendingRateOracle(address)"(
      _lendingRateOracle: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPriceOracle(
      _priceOracle: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPriceOracle(address)"(
      _priceOracle: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setTokenDistributor(
      _tokenDistributor: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setTokenDistributor(address)"(
      _tokenDistributor: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  getAddress(_key: BytesLike, overrides?: CallOverrides): Promise<string>;

  "getAddress(bytes32)"(
    _key: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getFeeProvider(overrides?: CallOverrides): Promise<string>;

  "getFeeProvider()"(overrides?: CallOverrides): Promise<string>;

  getLendingPool(overrides?: CallOverrides): Promise<string>;

  "getLendingPool()"(overrides?: CallOverrides): Promise<string>;

  getLendingPoolConfigurator(overrides?: CallOverrides): Promise<string>;

  "getLendingPoolConfigurator()"(overrides?: CallOverrides): Promise<string>;

  getLendingPoolLiquidationManager(overrides?: CallOverrides): Promise<string>;

  "getLendingPoolLiquidationManager()"(
    overrides?: CallOverrides
  ): Promise<string>;

  getLendingPoolManager(overrides?: CallOverrides): Promise<string>;

  "getLendingPoolManager()"(overrides?: CallOverrides): Promise<string>;

  getLendingRateOracle(overrides?: CallOverrides): Promise<string>;

  "getLendingRateOracle()"(overrides?: CallOverrides): Promise<string>;

  getPriceOracle(overrides?: CallOverrides): Promise<string>;

  "getPriceOracle()"(overrides?: CallOverrides): Promise<string>;

  getTokenDistributor(overrides?: CallOverrides): Promise<string>;

  "getTokenDistributor()"(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  setFeeProviderImpl(
    _feeProvider: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setFeeProviderImpl(address)"(
    _feeProvider: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setLendingPoolConfiguratorImpl(
    _configurator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setLendingPoolConfiguratorImpl(address)"(
    _configurator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setLendingPoolImpl(
    _pool: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setLendingPoolImpl(address)"(
    _pool: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setLendingPoolLiquidationManager(
    _manager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setLendingPoolLiquidationManager(address)"(
    _manager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setLendingPoolManager(
    _lendingPoolManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setLendingPoolManager(address)"(
    _lendingPoolManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setLendingRateOracle(
    _lendingRateOracle: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setLendingRateOracle(address)"(
    _lendingRateOracle: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPriceOracle(
    _priceOracle: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPriceOracle(address)"(
    _priceOracle: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setTokenDistributor(
    _tokenDistributor: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setTokenDistributor(address)"(
    _tokenDistributor: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    getAddress(_key: BytesLike, overrides?: CallOverrides): Promise<string>;

    "getAddress(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getFeeProvider(overrides?: CallOverrides): Promise<string>;

    "getFeeProvider()"(overrides?: CallOverrides): Promise<string>;

    getLendingPool(overrides?: CallOverrides): Promise<string>;

    "getLendingPool()"(overrides?: CallOverrides): Promise<string>;

    getLendingPoolConfigurator(overrides?: CallOverrides): Promise<string>;

    "getLendingPoolConfigurator()"(overrides?: CallOverrides): Promise<string>;

    getLendingPoolLiquidationManager(
      overrides?: CallOverrides
    ): Promise<string>;

    "getLendingPoolLiquidationManager()"(
      overrides?: CallOverrides
    ): Promise<string>;

    getLendingPoolManager(overrides?: CallOverrides): Promise<string>;

    "getLendingPoolManager()"(overrides?: CallOverrides): Promise<string>;

    getLendingRateOracle(overrides?: CallOverrides): Promise<string>;

    "getLendingRateOracle()"(overrides?: CallOverrides): Promise<string>;

    getPriceOracle(overrides?: CallOverrides): Promise<string>;

    "getPriceOracle()"(overrides?: CallOverrides): Promise<string>;

    getTokenDistributor(overrides?: CallOverrides): Promise<string>;

    "getTokenDistributor()"(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    setFeeProviderImpl(
      _feeProvider: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setFeeProviderImpl(address)"(
      _feeProvider: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setLendingPoolConfiguratorImpl(
      _configurator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setLendingPoolConfiguratorImpl(address)"(
      _configurator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setLendingPoolImpl(_pool: string, overrides?: CallOverrides): Promise<void>;

    "setLendingPoolImpl(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setLendingPoolLiquidationManager(
      _manager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setLendingPoolLiquidationManager(address)"(
      _manager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setLendingPoolManager(
      _lendingPoolManager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setLendingPoolManager(address)"(
      _lendingPoolManager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setLendingRateOracle(
      _lendingRateOracle: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setLendingRateOracle(address)"(
      _lendingRateOracle: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setPriceOracle(
      _priceOracle: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPriceOracle(address)"(
      _priceOracle: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setTokenDistributor(
      _tokenDistributor: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setTokenDistributor(address)"(
      _tokenDistributor: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    EthereumAddressUpdated(newAddress: string | null): EventFilter;

    FeeProviderUpdated(newAddress: string | null): EventFilter;

    LendingPoolConfiguratorUpdated(newAddress: string | null): EventFilter;

    LendingPoolLiquidationManagerUpdated(
      newAddress: string | null
    ): EventFilter;

    LendingPoolManagerUpdated(newAddress: string | null): EventFilter;

    LendingPoolUpdated(newAddress: string | null): EventFilter;

    LendingRateOracleUpdated(newAddress: string | null): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;

    PriceOracleUpdated(newAddress: string | null): EventFilter;

    ProxyCreated(id: null, newAddress: string | null): EventFilter;

    TokenDistributorUpdated(newAddress: string | null): EventFilter;
  };

  estimateGas: {
    getAddress(_key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getAddress(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFeeProvider(overrides?: CallOverrides): Promise<BigNumber>;

    "getFeeProvider()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLendingPool(overrides?: CallOverrides): Promise<BigNumber>;

    "getLendingPool()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLendingPoolConfigurator(overrides?: CallOverrides): Promise<BigNumber>;

    "getLendingPoolConfigurator()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLendingPoolLiquidationManager(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLendingPoolLiquidationManager()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLendingPoolManager(overrides?: CallOverrides): Promise<BigNumber>;

    "getLendingPoolManager()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLendingRateOracle(overrides?: CallOverrides): Promise<BigNumber>;

    "getLendingRateOracle()"(overrides?: CallOverrides): Promise<BigNumber>;

    getPriceOracle(overrides?: CallOverrides): Promise<BigNumber>;

    "getPriceOracle()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTokenDistributor(overrides?: CallOverrides): Promise<BigNumber>;

    "getTokenDistributor()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    setFeeProviderImpl(
      _feeProvider: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setFeeProviderImpl(address)"(
      _feeProvider: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setLendingPoolConfiguratorImpl(
      _configurator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setLendingPoolConfiguratorImpl(address)"(
      _configurator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setLendingPoolImpl(
      _pool: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setLendingPoolImpl(address)"(
      _pool: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setLendingPoolLiquidationManager(
      _manager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setLendingPoolLiquidationManager(address)"(
      _manager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setLendingPoolManager(
      _lendingPoolManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setLendingPoolManager(address)"(
      _lendingPoolManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setLendingRateOracle(
      _lendingRateOracle: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setLendingRateOracle(address)"(
      _lendingRateOracle: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPriceOracle(
      _priceOracle: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPriceOracle(address)"(
      _priceOracle: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setTokenDistributor(
      _tokenDistributor: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setTokenDistributor(address)"(
      _tokenDistributor: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAddress(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAddress(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFeeProvider(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getFeeProvider()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLendingPool(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getLendingPool()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLendingPoolConfigurator(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLendingPoolConfigurator()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLendingPoolLiquidationManager(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLendingPoolLiquidationManager()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLendingPoolManager(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLendingPoolManager()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLendingRateOracle(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLendingRateOracle()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPriceOracle(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getPriceOracle()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenDistributor(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTokenDistributor()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    setFeeProviderImpl(
      _feeProvider: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setFeeProviderImpl(address)"(
      _feeProvider: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setLendingPoolConfiguratorImpl(
      _configurator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setLendingPoolConfiguratorImpl(address)"(
      _configurator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setLendingPoolImpl(
      _pool: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setLendingPoolImpl(address)"(
      _pool: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setLendingPoolLiquidationManager(
      _manager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setLendingPoolLiquidationManager(address)"(
      _manager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setLendingPoolManager(
      _lendingPoolManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setLendingPoolManager(address)"(
      _lendingPoolManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setLendingRateOracle(
      _lendingRateOracle: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setLendingRateOracle(address)"(
      _lendingRateOracle: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPriceOracle(
      _priceOracle: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPriceOracle(address)"(
      _priceOracle: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setTokenDistributor(
      _tokenDistributor: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setTokenDistributor(address)"(
      _tokenDistributor: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
